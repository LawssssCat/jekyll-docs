# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

# see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-including-and-excluding-branches
on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]
    paths-ignore: 
      - '!README.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Install and Build js üì¶
        run: |
          npm install
          npm run js-build
      - name: Setup Ruby üìÅ
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Install dependencies üîß
        run: |
          echo =============== gem environment
          gem environment
          echo =============== gem list
          gem list 
          echo =============== gem install
          gem install bundler
          echo =============== gem bundle config list
          bundle config list
          echo =============== gem bundle list
          # bundle list
          echo =============== gem bundle config change see https://github.com/actions/cache/blob/master/examples.md#ruby---bundler
          bundle config path vendor/bundle
          bundle config list
          echo =============== gem bundle list
          # bundle list
          echo =============== gem bundle install
          bundle install --jobs 4 --retry 3
          echo =============== gem bundle list
          bundle list
      - name: Setup Pages üìÅ
        id: pages
        uses: actions/configure-pages@v1
      # - run: bundle exec jekyll build --baseurl ${{ steps.pages.outputs.base_path }} # defaults output to '/_site'
      - name: Build üì¶
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1 # This will automatically upload an artifact from the '/_site' directory

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # see https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log
  dump_contexts_to_log:
      runs-on: ubuntu-latest
      steps:
        - name: Dump GitHub context üõéÔ∏è
          id: github_context_step
          run: echo '${{ toJSON(github) }}'
        - name: Dump env context
          run: echo '${{ toJSON(env) }}'
        - name: Dump job context
          run: echo '${{ toJSON(job) }}'
        - name: Dump steps context
          run: echo '${{ toJSON(steps) }}'
        - name: Dump runner context
          run: echo '${{ toJSON(runner) }}'
        - name: Dump strategy context
          run: echo '${{ toJSON(strategy) }}'
        - name: Dump matrix context
          run: echo '${{ toJSON(matrix) }}'
        - name: Dump secrets context
          run: echo '${{ toJSON(secrets) }}'
        - name: Dump needs context
          run: echo '${{ toJSON(needs) }}'
        - name: Dump inputs context
          run: echo '${{ toJSON(inputs) }}'  
