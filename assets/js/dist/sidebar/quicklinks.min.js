(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
'use strict';

var lazyload = require('lazyload');
var TOOL = require('tool-box');

/**
 * change scroll on load if the last active is hidden because of overflow-y
 */
lazyload.onload(function () {
  var quicklinksScroller = window.document.querySelector('.page__sidebar');
  if (TOOL.isOverflowY(quicklinksScroller)) {
    var activeList = quicklinksScroller.querySelectorAll('.active');
    if (activeList && activeList.length > 0) {
      var activeFirst = activeList[0];
      var activeLast = activeList[activeList.length - 1];
      var activeFirstTop = TOOL.positionRelative(activeFirst, quicklinksScroller).top;
      var activeLastTop = TOOL.positionRelative(activeLast, quicklinksScroller).top;
      var activeHeight = activeLastTop - activeFirstTop;
      var scrollHeight = quicklinksScroller.clientHeight;
      var toTop = void 0;
      if (scrollHeight > activeHeight) {
        toTop = activeFirstTop;
      } else {
        toTop = activeLastTop - scrollHeight;
      }
      quicklinksScroller.scroll({
        top: toTop,
        behavior: 'smooth'
      });
    }
  }
});

},{"lazyload":undefined,"tool-box":undefined}]},{},[1]);
